etl:
  queries:
    - name: rancher_hosts
      query: "rancher.get_resource_from_all_projects('hosts')"
      processor: |
        public_endpoints = session.setdefault("public_endpoints", [])
        for pe in item["publicEndpoints"]:
          pe["project_name"] = item["project_name"]
          public_endpoints.append(pe)
      template_refs:
        - rancher_host_template
        - rancher_host_status_template
    - name: rancher_public_endpoints
      query: "session['public_endpoints']"
      template_refs:
        - rancher_public_endpoint_template
  template:
    components:
      - name: rancher_host_template
        spec:
          name: "$.hostname"
          type: "rancher-host"
          uid: "|uid('rancher', 'host', item['id'])"
          layer: "Rancher Hosts"
          domain: "$.project_name"
          relations: |
            relations = [uid('rancher', 'host', item['id'])]
            instance_ids = item.get("instanceIds", [])
            for instance_id in instance_ids:
              rel = "<%s" % uid('rancher', 'container', instance_id)
              relations.append(rel)
            relations
          custom_properties:
            milliCpu: "$.milliCpu"
            memory_gb: "|global_session['bytes_to'](item['memory'], 'g')"
            info: "$.info.labels"
            agentIpAddress: "$.agentIpAddress"
      - name: rancher_public_endpoint_template
        selector: |
            cid = uid('rancher', 'endpoint', '%s:%s' % (item['instanceId'], item['port'] ))
            process = False if factory.component_exists(cid) else True
            process
        spec:
          name: "|'%s:%s' % (item['ipAddress'], item['port'])"
          type: "rancher-endpoint"
          uid: "|uid('rancher', 'endpoint', '%s:%s' % (item['instanceId'], item['port'] ))"
          layer: "Rancher Endpoints"
          domain: "$.project_name"
          relations: |
            relations = [uid('rancher', 'host', item['hostId'])]
            if item['serviceId']:
              relations.append(uid('rancher', 'service', item['serviceId']))
            relations
    health:
      - name: rancher_host_status_template
        spec:
          check_id: "|'rancher_host_%s_status' % item['id']"
          check_name: "HostAvailable"
          topo_identifier: "|uid('rancher', 'host', item['id'])"
          health: |
            if item["state"] == "active":
              if item["agentState"] is None:
                state = "CLEAR"
              else:
                state = "DEVIATING"
                health.message = "Agent Disconnected"
            else:
              state = "CRITICAL"
              health.message = "Host Inactive"
            state
