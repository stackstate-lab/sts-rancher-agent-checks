[project]
name = "sts_rancher"
version = "0.1.1"
description = "StackState integration with Rancher via Agent Checks"
authors = [
    {name = "Ravan Naidoo", email = "rnaidoo@stackstate.com"},
]

requires-python = ">=3.9,<3.10"
license = {text = "MIT"}

#######################################################################################################################
# Prod Dependencies
#######################################################################################################################

dependencies = [
]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

#######################################################################################################################
# Optional Prod Dependencies
#######################################################################################################################

[project.optional-dependencies]

#######################################################################################################################
# Dev Dependencies
#######################################################################################################################

[tool]
[tool.pdm]

#######################################################################################################################
# Dev Dependencies
#######################################################################################################################

[tool.pdm.dev-dependencies]

etl = [
    "stackstate-etl @ git+ssh://git@github.com/stackstate-lab/stackstate-etl.git@master",
    "stackstate-etl-agent-check @ git+ssh://git@github.com/stackstate-lab/stackstate-etl-agent-check.git@master",
]


dev = [
    "py-backwards>=0.7",
    "pytest>=7.1.3",
    "pytest-sugar>=0.9.5",
    "toml>=0.10.2",
    "requests-mock>=1.9.3"
]
format = [
    "flakehell>=0.9.0",
    "flake8==3.9.0",
    "black>=22.8.0",
    "mypy>=0.971",
    "isort>=5.10.1",
]
checks_base = [
    "pyyaml>=6.0",
    "schematics>=2.1.1",
    "deprecated>=1.2.13",
    "prometheus-client>=0.14.1",
    "requests>=2.28.1",
]

#######################################################################################################################
# Scripts
#######################################################################################################################

[tool.pdm.scripts]
post_install = "pip install \"git+https://github.com/StackVista/stackstate-agent-integrations.git@1.22.0#egg=stackstate_checks_base&subdirectory=stackstate_checks_base\" -t \"./__pypackages__/3.9/lib\" --src \"./__pypackages__/3.9/src\" --upgrade"
pre_build = {composite = ["format", "test", "package"]}
serve = {call = "tasks.agent:run_agent"}
check = {call = "tasks.agent:run_check('rancher')"}
format = {composite = ["isort", "black", "flakehell", "mypy"]}
test = "pytest -s -p no:logging ./tests"
clean = "rm -rf build dist"

#######################################################################################################################
# Helper Scripts
#######################################################################################################################
_.env_file = ".sts.env"
black = "black src tests"
isort = "isort src"
flakehell = "flakehell lint ./src/ ./tests/"
mypy = "mypy src"
package = {call = "tasks.agent:perform_dist"}
buildAgent = {call = "tasks.agent:build_agent"}
cleanAgent = {call = "tasks.agent:clean_agent"}

#######################################################################################################################
# iSort
#######################################################################################################################

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths=["src", "tests"]

#######################################################################################################################
# Black
#######################################################################################################################

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

#######################################################################################################################
# FlakeHell
#######################################################################################################################

[tool.flakehell]
exclude = ["README.rst", "README.md", ".eggs", ".tox", "build",".venv", "tests/test_explore_api.py"]
include = ["src", "tests"]
format = "colored"
max_line_length = 120
show_source = true
# Temp fix until issue is fixed https://github.com/flakehell/flakehell/issues/10
extended_default_ignore=[]

[tool.flakehell.plugins]
"*" = [
    "+*",
    "-E203",
]

#######################################################################################################################
# PyTest
#######################################################################################################################
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
filterwarnings = [
    "error",
    "ignore::schematics.deprecated.SchematicsDeprecationWarning"
]
pythonpath = [
    "src"
]
testpaths = [
    "tests",
    "integration",
]

#######################################################################################################################
# MyPy
#######################################################################################################################

[tool.mypy]
python_version = 3.7
exclude = [
    '.*test_explore_apis\.py'
]

[[tool.mypy.overrides]]
module = "schematics.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "stackstate_checks.base.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "requests.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "six.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "yaml.*"
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = "stackstate_etl.model.instance.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "stackstate_etl_check_processor.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "urllib3.util.*"
ignore_missing_imports = true



