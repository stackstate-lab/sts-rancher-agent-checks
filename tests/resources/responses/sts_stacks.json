{
  "type": "collection",
  "resourceType": "stack",
  "links": {
    "self": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks"
  },
  "createTypes": {
    "composeProject": "http://192.168.56.30:8080/v2-beta/projects/1a17/composeprojects",
    "kubernetesStack": "http://192.168.56.30:8080/v2-beta/projects/1a17/kubernetesstacks",
    "stack": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks"
  },
  "actions": {},
  "data": [
    {
      "id": "1st12",
      "type": "stack",
      "links": {
        "self": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12",
        "account": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/account",
        "hosts": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/hosts",
        "instances": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/instances",
        "scheduledUpgrades": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/scheduledupgrades",
        "secrets": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/secrets",
        "services": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/services",
        "volumeTemplates": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/volumetemplates",
        "volumes": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/volumes",
        "composeConfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/composeconfig"
      },
      "actions": {
        "deactivateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/?action=deactivateservices",
        "activateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/?action=activateservices",
        "upgrade": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/?action=upgrade",
        "addoutputs": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/?action=addoutputs",
        "update": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/?action=update",
        "exportconfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/?action=exportconfig",
        "remove": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st12/?action=remove"
      },
      "baseType": "stack",
      "name": "healthcheck",
      "state": "active",
      "accountId": "1a17",
      "answers": null,
      "binding": null,
      "created": "2022-07-21T10:11:48Z",
      "createdTS": 1658398308000,
      "description": null,
      "dockerCompose": "version: '2'\nservices:\n  healthcheck:\n    labels:\n      io.rancher.container.create_agent: 'true'\n      io.rancher.scheduler.global: 'true'\n    image: rancher/healthcheck:v0.3.8\n    command: healthcheck --metadata-address 169.254.169.250\n    logging:\n      driver: json-file\n      options:\n        max-size: 25m\n        max-file: '2'\n",
      "environment": null,
      "externalId": "catalog://library:infra*healthcheck:7",
      "group": null,
      "healthState": "healthy",
      "kind": "stack",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": ".catalog:\n  name: \"Healthcheck Service\"\n  version: \"v0.3.8\"\n  description: \"Rancher healthcheck service\"\n  minimum_rancher_version: v1.6.19-rc1\nhealthcheck:\n  health_check:\n      port: 42\n      interval: 2000\n      response_timeout: 2000\n      unhealthy_threshold: 3\n      healthy_threshold: 2\n      initializing_timeout: 60000\n      reinitializing_timeout: 60000\n",
      "removed": null,
      "serviceIds": [
        "1s22"
      ],
      "startOnCreate": null,
      "system": true,
      "templates": null,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "023e4bd8-d988-4ab5-8654-894cb778b782"
    },
    {
      "id": "1st13",
      "type": "stack",
      "links": {
        "self": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13",
        "account": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/account",
        "hosts": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/hosts",
        "instances": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/instances",
        "scheduledUpgrades": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/scheduledupgrades",
        "secrets": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/secrets",
        "services": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/services",
        "volumeTemplates": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/volumetemplates",
        "volumes": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/volumes",
        "composeConfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/composeconfig"
      },
      "actions": {
        "deactivateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/?action=deactivateservices",
        "activateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/?action=activateservices",
        "upgrade": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/?action=upgrade",
        "addoutputs": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/?action=addoutputs",
        "update": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/?action=update",
        "exportconfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/?action=exportconfig",
        "remove": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st13/?action=remove"
      },
      "baseType": "stack",
      "name": "ipsec",
      "state": "active",
      "accountId": "1a17",
      "answers": null,
      "binding": null,
      "created": "2022-07-21T10:11:48Z",
      "createdTS": 1658398308000,
      "description": null,
      "dockerCompose": "version: '2'\n\n{{- $netImage:=\"rancher/net:v0.13.17\" }}\n\nservices:\n  ipsec:\n    # IMPORTANT!!!! DO NOT CHANGE VERSION ON UPGRADE\n    image: rancher/net:holder\n    command: sh -c \"echo Refer to router sidekick for logs; mkfifo f; exec cat f\"\n    network_mode: ipsec\n    ports:\n      - 0.0.0.0:500:500/udp\n      - 0.0.0.0:4500:4500/udp\n    labels:\n      io.rancher.sidekicks: router,connectivity-check\n      io.rancher.scheduler.global: 'true'\n      io.rancher.cni.link_mtu_overhead: '0'\n      io.rancher.network.macsync: 'true'\n      io.rancher.network.arpsync: 'true'\n  router:\n    cap_add:\n      - NET_ADMIN\n    image: {{$netImage}}\n    command: start-ipsec.sh\n    network_mode: container:ipsec\n    environment:\n      RANCHER_DEBUG: '${RANCHER_DEBUG}'\n      IPSEC_REPLAY_WINDOW_SIZE: '${IPSEC_REPLAY_WINDOW_SIZE}'\n      IPSEC_IKE_SA_REKEY_INTERVAL: '${IPSEC_IKE_SA_REKEY_INTERVAL}'\n      IPSEC_CHILD_SA_REKEY_INTERVAL: '${IPSEC_CHILD_SA_REKEY_INTERVAL}'\n      RANCHER_IPSEC_PSK: '${RANCHER_IPSEC_PSK}'\n    labels:\n      io.rancher.container.create_agent: 'true'\n      io.rancher.container.agent_service.ipsec: 'true'\n    logging:\n      driver: json-file\n      options:\n        max-size: 25m\n        max-file: '2'\n    sysctls:\n      net.ipv4.conf.all.send_redirects: '0'\n      net.ipv4.conf.default.send_redirects: '0'\n      net.ipv4.conf.eth0.send_redirects: '0'\n      net.ipv4.xfrm4_gc_thresh: '2147483647'\n  connectivity-check:\n    image: {{$netImage}}\n    command:\n      - connectivity-check\n      {{- if ne .Values.CONNECTIVITY_CHECK_INTERVAL \"5000\" }}\n      - --connectivity-check-interval\n      - ${CONNECTIVITY_CHECK_INTERVAL}\n      {{- end }}\n      {{- if ne .Values.PEER_CONNECTION_TIMEOUT \"1000\" }}\n      - --peer-connection-timeout\n      - ${PEER_CONNECTION_TIMEOUT}\n      {{- end }}\n    environment:\n      RANCHER_DEBUG: '${RANCHER_DEBUG}'\n    network_mode: container:ipsec\n  cni-driver:\n    privileged: true\n    image: {{$netImage}}\n    command: start-cni-driver.sh\n    network_mode: host\n    pid: host\n    environment:\n      RANCHER_DEBUG: '${RANCHER_DEBUG}'\n    labels:\n      io.rancher.scheduler.global: 'true'\n      io.rancher.network.cni.binary: 'rancher-bridge'\n      io.rancher.container.dns: 'true'\n    logging:\n      driver: json-file\n      options:\n        max-size: 25m\n        max-file: '2'\n    volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    - rancher-cni-driver:/opt/cni-driver\n    network_driver:\n      name: Rancher IPsec\n      default_network:\n        name: ipsec\n        host_ports: {{ .Values.HOST_PORTS }}\n        subnets:\n        - network_address: $SUBNET\n          start_address: $SUBNET_START_ADDRESS\n          end_address: $SUBNET_END_ADDRESS\n        dns:\n        - 169.254.169.250\n        dns_search:\n        - rancher.internal\n      cni_config:\n        '10-rancher.conf':\n          name: rancher-cni-network\n          type: rancher-bridge\n          bridge: $DOCKER_BRIDGE\n          bridgeSubnet: $SUBNET\n          logToFile: /var/log/rancher-cni.log\n          isDebugLevel: ${RANCHER_DEBUG}\n          isDefaultGateway: true\n          hostNat: true\n          hairpinMode: {{  .Values.RANCHER_HAIRPIN_MODE }}\n          promiscMode: {{ .Values.RANCHER_PROMISCUOUS_MODE }}\n          mtu: ${MTU}\n          linkMTUOverhead: 98\n          ipam:\n            type: rancher-cni-ipam\n            subnetPrefixSize: /{{ .Values.SUBNET_PREFIX }}\n            logToFile: /var/log/rancher-cni.log\n            isDebugLevel: ${RANCHER_DEBUG}\n",
      "environment": null,
      "externalId": "catalog://library:infra*ipsec:18",
      "group": null,
      "healthState": "healthy",
      "kind": "stack",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": ".catalog:\n  name: \"Rancher IPsec\"\n  version: \"0.2.5\"\n  minimum_rancher_version: v1.6.19-rc1\n  questions:\n    - variable: \"DOCKER_BRIDGE\"\n      label: \"Docker Bridge\"\n      description: \"Name of Docker Bridge. Default is `docker0`\"\n      type: \"string\"\n      default: \"docker0\"\n      required: true\n    - variable: MTU\n      label: \"MTU for the network\"\n      description: \"Adjust the MTU for the network, according to your needs. Ex: GCE(1460), AWS(1500), etc\"\n      required: true\n      default: 1500\n      type: int\n    - variable: \"RANCHER_DEBUG\"\n      label: \"Enable Debug Logs\"\n      description: \"This will enable very verbose debug logs.\"\n      type: \"boolean\"\n      default: \"false\"\n      required: true\n    - variable: \"HOST_PORTS\"\n      label: \"Enable Host Ports\"\n      description: \"Flag to enable/disable publishing the ports on the hosts\"\n      type: \"boolean\"\n      default: \"true\"\n      required: true\n    - variable: \"SUBNET\"\n      label: \"Subnet\"\n      description: \"The subnet to use for the managed IPSEC network.\"\n      type: \"string\"\n      default: '10.42.0.0/16'\n      required: true\n    - variable: \"SUBNET_PREFIX\"\n      label: \"IPAM Subnet Prefix\"\n      description: \"The Subnet prefix to use for the managed network. For most users this is same as the bridge subnet prefix. Ex: 16 if using 10.42.0.0/16 for bridge subnet.\"\n      type: int\n      default: 16\n      required: true\n    - variable: \"SUBNET_START_ADDRESS\"\n      label: \"Subnet start IP Address\"\n      description: \"Experimental: Do not change/update. Incorrect values can break your Rancher installation.\"\n      type: \"string\"\n      default: ''\n      required: false\n    - variable: \"SUBNET_END_ADDRESS\"\n      label: \"Subnet end IP Address\"\n      description: \"Experimental: Do not change/update. Incorrect values can break your Rancher installation.\"\n      type: \"string\"\n      default: ''\n      required: false\n    - variable: \"RANCHER_HAIRPIN_MODE\"\n      label: \"Enable Hairpin mode\"\n      description: \"If this is enabled, Promiscuous mode needs to be disabled.\"\n      type: \"boolean\"\n      default: \"false\"\n      required: true\n    - variable: \"RANCHER_PROMISCUOUS_MODE\"\n      label: \"Enable Promiscuous mode on the bridge\"\n      description: \"If this is enabled, Hairpin mode needs to be disabled.\"\n      type: \"boolean\"\n      default: \"true\"\n      required: true\n    - variable: \"IPSEC_REPLAY_WINDOW_SIZE\"\n      label: \"IPSec Replay Window size\"\n      description: \"This option is helpful to adjust the replay window size\"\n      type: \"string\"\n      default: '1024'\n      required: true\n    - variable: \"IPSEC_IKE_SA_REKEY_INTERVAL\"\n      label: \"IPSec IKE_SA rekey interval\"\n      description: \"This is an advanced setting and most users will not need to use this. Incorrect values can break your Rancher installation.\"\n      type: \"string\"\n      default: '4h'\n      required: true\n    - variable: \"IPSEC_CHILD_SA_REKEY_INTERVAL\"\n      label: \"IPSec CHILD_SA rekey time\"\n      description: \"This is an advanced setting and most users will not need to use this. Incorrect values can break your Rancher installation.\"\n      type: \"string\"\n      default: '1h'\n      required: true\n    - variable: \"RANCHER_IPSEC_PSK\"\n      label: \"PSK for IPSec\"\n      description: \"This is an advanced setting and most users will not need to use this. Incorrect values can break your Rancher installation.\"\n      type: \"string\"\n      default: ''\n      required: false\n    - variable: \"CONNECTIVITY_CHECK_INTERVAL\"\n      label: \"Interval between connectivity checks for a peer (in milliseconds)\"\n      description: \"This is an advanced setting and most users will not need to use this. Incorrect values can break your Rancher installation.\"\n      type: int\n      default: 10000\n      required: true\n    - variable: \"PEER_CONNECTION_TIMEOUT\"\n      label: \"Connection timeout when connecting to a peer (in milliseconds)\"\n      description: \"This is an advanced setting and most users will not need to use this. Incorrect values can break your Rancher installation.\"\n      type: int\n      default: 60000\n      required: true\n\nipsec:\n  health_check:\n    request_line: GET \"/connectivity\" \"HTTP/1.0\"\n    port: 80\n    interval: 5000\n    initializing_timeout: 60000\n    reinitializing_timeout: 60000\n    response_timeout: 2000\n    healthy_threshold: 2\n    unhealthy_threshold: 3\n    strategy: none\n",
      "removed": null,
      "serviceIds": [
        "1s20",
        "1s24"
      ],
      "startOnCreate": null,
      "system": true,
      "templates": null,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "07ad3510-296e-4f15-9117-81ada18b87ac"
    },
    {
      "id": "1st14",
      "type": "stack",
      "links": {
        "self": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14",
        "account": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/account",
        "hosts": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/hosts",
        "instances": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/instances",
        "scheduledUpgrades": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/scheduledupgrades",
        "secrets": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/secrets",
        "services": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/services",
        "volumeTemplates": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/volumetemplates",
        "volumes": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/volumes",
        "composeConfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/composeconfig"
      },
      "actions": {
        "deactivateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/?action=deactivateservices",
        "activateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/?action=activateservices",
        "upgrade": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/?action=upgrade",
        "addoutputs": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/?action=addoutputs",
        "update": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/?action=update",
        "exportconfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/?action=exportconfig",
        "remove": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st14/?action=remove"
      },
      "baseType": "stack",
      "name": "network-services",
      "state": "active",
      "accountId": "1a17",
      "answers": null,
      "binding": null,
      "created": "2022-07-21T10:11:48Z",
      "createdTS": 1658398308000,
      "description": null,
      "dockerCompose": "version: '2'\n\n{{- $netManagerImage:=\"rancher/network-manager:v0.7.22\" }}\n{{- $metadataImage:=\"rancher/metadata:v0.10.4\" }}\n{{- $dnsImage:=\"rancher/dns:v0.17.4\" }}\n\nservices:\n  network-manager:\n    image: {{$netManagerImage}}\n    privileged: true\n    network_mode: host\n    pid: host\n    command: plugin-manager --disable-cni-setup --metadata-address 169.254.169.250 --arpsync-interval ${ARP_SYNC_INTERVAL}\n    environment:\n      DOCKER_BRIDGE: docker0\n      METADATA_IP: 169.254.169.250\n    volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    - /var/lib/docker:/var/lib/docker\n    - /var/lib/rancher/state:/var/lib/rancher/state\n    - /lib/modules:/lib/modules:ro\n    - /run:/run\n    - /var/run:/var/run:ro\n    - rancher-cni-driver:/etc/cni\n    - rancher-cni-driver:/opt/cni\n    labels:\n      io.rancher.scheduler.global: 'true'\n    logging:\n      driver: json-file\n      options:\n        max-size: 25m\n        max-file: '2'\n  metadata:\n    cap_add:\n    - NET_ADMIN\n    image: {{$metadataImage}}\n    network_mode: bridge\n    command: start.sh rancher-metadata -reload-interval-limit=${RELOAD_INTERVAL_LIMIT} -subscribe\n    labels:\n      io.rancher.sidekicks: dns\n      io.rancher.container.create_agent: 'true'\n      io.rancher.scheduler.global: 'true'\n      io.rancher.container.agent_service.metadata: 'true'\n    logging:\n      driver: json-file\n      options:\n        max-size: 25m\n        max-file: '2'\n    sysctls:\n      net.ipv4.conf.all.send_redirects: '0'\n      net.ipv4.conf.default.send_redirects: '0'\n      net.ipv4.conf.eth0.send_redirects: '0'\n    cpu_period: ${CPU_PERIOD}\n    cpu_quota: ${CPU_QUOTA}\n  dns:\n    image: {{$dnsImage}}\n    network_mode: container:metadata\n    command: rancher-dns --listen 169.254.169.250:53 --metadata-server=localhost --answers=/etc/rancher-dns/answers.json --recurser-timeout ${DNS_RECURSER_TIMEOUT} --ttl ${TTL}\n    labels:\n      io.rancher.scheduler.global: 'true'\n    logging:\n      driver: json-file\n      options:\n        max-size: 25m\n        max-file: '2'\n",
      "environment": null,
      "externalId": "catalog://library:infra*network-services:29",
      "group": null,
      "healthState": "healthy",
      "kind": "stack",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": ".catalog:\n    name: Network Services\n    version: v0.2.11\n    minimum_rancher_version: v1.6.26-rc1\n    questions:\n    - variable: DNS_RECURSER_TIMEOUT\n      label: Timeout for Rancher DNS Recurser\n      description: Specify timeout in seconds for DNS Recurser.\n      required: true\n      default: 2\n      type: int\n    - variable: TTL\n      label: TTL for service discovery answers\n      description: How long answers for *.rancher.internal responses are valid\n      required: true\n      default: 1\n      type: int\n    - variable: CPU_PERIOD\n      label: CPU scheduler period\n      description: Sets the period of CPUs to limit the metadata container's CPU usage\n      required: true\n      default: 400000\n      type: int\n    - variable: CPU_QUOTA\n      label: CPU quota on the metadata container\n      description: Sets the CPU quota on the metadata container\n      required: true\n      default: 200000\n      type: int\n    - variable: RELOAD_INTERVAL_LIMIT\n      label: Metadata reload interval limit\n      description: Limits reload to 1 per interval (milliseconds)\n      required: true\n      default: 1000\n      type: int\n    - variable: ARP_SYNC_INTERVAL\n      label: ARP sync interval\n      description: Sets the interval of ARP sync in seconds\n      required: true\n      default: 5\n      type: int",
      "removed": null,
      "serviceIds": [
        "1s19",
        "1s21"
      ],
      "startOnCreate": null,
      "system": true,
      "templates": null,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "c3c22310-9d4e-4b29-b482-0f6cc1fc8edb"
    },
    {
      "id": "1st15",
      "type": "stack",
      "links": {
        "self": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15",
        "account": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/account",
        "hosts": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/hosts",
        "instances": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/instances",
        "scheduledUpgrades": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/scheduledupgrades",
        "secrets": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/secrets",
        "services": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/services",
        "volumeTemplates": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/volumetemplates",
        "volumes": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/volumes",
        "composeConfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/composeconfig"
      },
      "actions": {
        "deactivateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/?action=deactivateservices",
        "activateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/?action=activateservices",
        "upgrade": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/?action=upgrade",
        "addoutputs": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/?action=addoutputs",
        "update": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/?action=update",
        "exportconfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/?action=exportconfig",
        "remove": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st15/?action=remove"
      },
      "baseType": "stack",
      "name": "scheduler",
      "state": "active",
      "accountId": "1a17",
      "answers": null,
      "binding": null,
      "created": "2022-07-21T10:11:48Z",
      "createdTS": 1658398308000,
      "description": null,
      "dockerCompose": "version: '2'\nservices:\n  scheduler:\n    image: rancher/scheduler:v0.8.6\n    command: scheduler --metadata-address 169.254.169.250\n    environment:\n        RANCHER_DEBUG: '${RANCHER_DEBUG}'\n    labels:\n        io.rancher.container.create_agent: \"true\"\n        io.rancher.container.agent_service.scheduling: \"true\"\n    logging:\n      driver: json-file\n      options:\n        max-size: 25m\n        max-file: '2'\n",
      "environment": null,
      "externalId": "catalog://library:infra*scheduler:13",
      "group": null,
      "healthState": "healthy",
      "kind": "stack",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": ".catalog:\n    name: Scheduler\n    description: A resource based scheduler plugin for Rancher.\n    version: v0.8.6\n    minimum_rancher_version: v1.6.26-rc1\n    questions:\n        - variable: \"RANCHER_DEBUG\"\n          label: \"Enable Debug Logs\"\n          description: \"This will enable very verbose debug logs.\"\n          type: \"boolean\"\n          default: \"false\"\n          required: true\n        - variable: \"HEALTHCHECK_INTERVAL\"\n          label: \"Healthcheck interval\"\n          description: \"The number of milliseconds between checks.\"\n          type: \"int\"\n          default: 2000\n          required: true\n        - variable: \"HEALTHCHECK_INIT_TIMEOUT\"\n          label: \"Healthcheck initializing timeout\"\n          description: \"The number of milliseconds before we exit initializing.\"\n          type: \"int\"\n          default: 10000\n          required: true\n        - variable: \"HEALTHCHECK_REINIT_TIMEOUT\"\n          label: \"Healthcheck reinitializing timeout\"\n          description: \"The number of milliseconds before we exit reinitializing.\"\n          type: \"int\"\n          default: 10000\n          required: true\n        - variable: \"HEALTHCHECK_RESPONSE_TIMEOUT\"\n          label: \"Healthcheck response timeout\"\n          description: \"The number of milliseconds before a check without response times out.\"\n          type: \"int\"\n          default: 30000\n          required: true\n        - variable: \"HEALTHCHECK_UNHEALTHY_THRESHHOLD\"\n          label: \"Healthcheck unhealthy threshhold\"\n          description: \"The number of failed check responses before a (currently marked healthy) container is considered unhealthy.\"\n          type: \"int\"\n          default: 3\n          required: true\n        - variable: \"HEALTHCHECK_HEALTHY_THRESHHOLD\"\n          label: \"Healthcheck healthy threshhold\"\n          description: \"The number of successful check responses before a (currently marked unhealthy) container is considered healthy again.\"\n          type: \"int\"\n          default: 2\n          required: true\n\nscheduler:\n    health_check:\n        request_line: GET /healthcheck HTTP/1.0\n        port: 80\n        interval: ${HEALTHCHECK_INTERVAL}\n        initializing_timeout: ${HEALTHCHECK_INIT_TIMEOUT}\n        reinitializing_timeout: ${HEALTHCHECK_REINIT_TIMEOUT}\n        response_timeout: ${HEALTHCHECK_RESPONSE_TIMEOUT}\n        unhealthy_threshold: ${HEALTHCHECK_UNHEALTHY_THRESHHOLD}\n        healthy_threshold: ${HEALTHCHECK_HEALTHY_THRESHHOLD}\n",
      "removed": null,
      "serviceIds": [
        "1s23"
      ],
      "startOnCreate": null,
      "system": true,
      "templates": null,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "01ce1149-7dd3-4f1b-aa76-3ac297f04814"
    },
    {
      "id": "1st16",
      "type": "stack",
      "links": {
        "self": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16",
        "account": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/account",
        "hosts": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/hosts",
        "instances": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/instances",
        "scheduledUpgrades": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/scheduledupgrades",
        "secrets": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/secrets",
        "services": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/services",
        "volumeTemplates": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/volumetemplates",
        "volumes": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/volumes",
        "composeConfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/composeconfig"
      },
      "actions": {
        "deactivateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/?action=deactivateservices",
        "activateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/?action=activateservices",
        "upgrade": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/?action=upgrade",
        "addoutputs": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/?action=addoutputs",
        "update": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/?action=update",
        "exportconfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/?action=exportconfig",
        "remove": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st16/?action=remove"
      },
      "baseType": "stack",
      "name": "mysql",
      "state": "active",
      "accountId": "1a17",
      "answers": null,
      "binding": null,
      "created": "2022-07-21T10:16:08Z",
      "createdTS": 1658398568000,
      "description": null,
      "dockerCompose": "version: '2'\nservices:\n  mysql-lb:\n    image: rancher/lb-service-haproxy:v0.6.4\n    ports:\n      - ${mysql_lb_port}:${mysql_lb_port}\n  mysql-data:\n    image: busybox\n    labels:\n      io.rancher.container.start_once: true\n    volumes:\n      - /var/lib/mysql\n  mysql:\n    image: ${mysql_image}\n    environment:\n{{- if eq .Values.mysql_allow_empty_password \"yes\"}}\n      MYSQL_ALLOW_EMPTY_PASSWORD: ${mysql_allow_empty_password}\n{{- end}}\n{{- if (.Values.mysql_database)}}\n      MYSQL_DATABASE: ${mysql_database}\n{{- end}}\n{{- if eq .Values.mysql_onetime_password \"yes\"}}\n      MYSQL_ONETIME_PASSWORD: ${mysql_onetime_password}\n{{- end}}\n{{- if (.Values.mysql_password)}}\n      MYSQL_PASSWORD: ${mysql_password}\n{{- end}}\n{{- if eq .Values.mysql_random_root_password \"yes\"}}\n      MYSQL_RANDOM_ROOT_PASSWORD: ${mysql_random_root_password}\n{{- end}}\n      MYSQL_ROOT_PASSWORD: ${mysql_root_password}\n{{- if (.Values.mysql_user)}}\n      MYSQL_USER: ${mysql_user}\n{{- end}}\n    tty: true\n    stdin_open: true\n    labels:\n      io.rancher.sidekicks: mysql-data\n    volumes_from:\n      - mysql-data\n",
      "environment": {
        "mysql_lb_port": "3306",
        "mysql_root_password": "admin",
        "mysql_image": "mysql:latest",
        "mysql_database": "",
        "mysql_user": "",
        "mysql_password": "",
        "mysql_allow_empty_password": "no",
        "mysql_random_root_password": "no",
        "mysql_onetime_password": "no"
      },
      "externalId": "catalog://community:mysql:0",
      "group": null,
      "healthState": "degraded",
      "kind": "stack",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": ".catalog:\n  name: \"mysql\"\n  version: \"v0.0.1\"\n  description: \"A recommended stack for the MySQL RDBMS.\"\n  uuid: mysql-0\n  minimum_rancher_version: v1.0.0\n  questions:\n    - variable: mysql_lb_port\n      description: \"Public port for access to MySQL through the load balancer\"\n      label: \"MySQL Public LB Port\"\n      required: true\n      default: 3306\n      type: \"int\"\n    - variable: mysql_root_password\n      description: \"The password that will be set for the MySQL root superuser account.\"\n      label: \"MySQL Root Password\"\n      required: true\n      type: password\n    - variable: mysql_image\n      description: \"The docker image to use for the MySQL server.\"\n      label: \"MySQL Docker Image\"\n      type: \"enum\"\n      options:\n        - \"mysql:latest\"\n        - \"mysql:8.0.1\"\n        - \"mysql:8.0\"\n        - \"mysql:8\"\n        - \"mysql:5.7.18\"\n        - \"mysql:5.7\"\n        - \"mysql:5\"\n        - \"mysql:5.6.36\"\n        - \"mysql:5.6\"\n        - \"mysql:5.5.56\"\n        - \"mysql:5.5\"\n        - \"mariadb:latest\"\n        - \"mariadb:10.3.0\"\n        - \"mariadb:10.3\"\n        - \"mariadb:10.2.6\"\n        - \"mariadb:10.2\"\n        - \"mariadb:10.1.24\"\n        - \"mariadb:10.1\"\n        - \"mariadb:10\"\n        - \"mariadb:10.0.31\"\n        - \"mariadb:10.0\"\n        - \"mariadb:5.5.56\"\n        - \"mariadb:5.5\"\n        - \"mariadb:5\"\n      default: \"mysql:latest\"\n      required: true\n    - variable: mysql_database\n      description: \"Optional, allows you to specify the name of a database to be created on image startup.\"\n      label: \"MySQL Database\"\n      required: false\n      type: \"string\"\n    - variable: mysql_user\n      description: \"Creates an additional MySQL (super)user. MySQL Password must also be set.\"\n      label: \"MySQL User\"\n      required: false\n      type: \"string\"\n    - variable: mysql_password\n      description: \"A password for the additional MySQL (super)user. MySQL User must also be set.\"\n      label: \"MySQL Password\"\n      required: false\n      type: password\n    - variable: mysql_allow_empty_password\n      description: \"Set to 'yes' to allow the container to be started with a blank password for the root user.\"\n      label: MySQL Allow Empty Password\n      type: \"enum\"\n      options:\n        - \"yes\"\n        - \"no\"\n      default: \"no\"\n      required: false\n    - variable: mysql_random_root_password\n      description: \"Set to 'yes' to generate a random initial password for the root user (using pwgen).\"\n      label: MySQL Random Root Password\n      type: \"enum\"\n      options:\n        - \"yes\"\n        - \"no\"\n      default: \"no\"\n      required: false\n    - variable: mysql_onetime_password\n      description: \"Set to 'yes' and the root user's password will be set as expired once init is complete.\"\n      label: MySQL One-time Password\n      type: \"enum\"\n      options:\n        - \"yes\"\n        - \"no\"\n      default: \"no\"\n      required: false\n\nversion: '2'\nservices:\n  mysql-lb:\n    scale: 1\n    start_on_create: true\n    lb_config:\n      certs: []\n      port_rules:\n      - protocol: tcp\n        service: mysql\n        source_port: ${mysql_lb_port}\n        target_port: 3306\n    health_check:\n      healthy_threshold: 2\n      response_timeout: 2000\n      port: 42\n      unhealthy_threshold: 3\n      interval: 2000\n      strategy: recreate\n  mysql:\n    scale: 1\n    start_on_create: true\n    health_check:\n      healthy_threshold: 2\n      response_timeout: 2000\n      port: 3306\n      unhealthy_threshold: 3\n      interval: 2000\n      strategy: recreate\n  mysql-data:\n    scale: 1\n    start_on_create: true\n",
      "removed": null,
      "serviceIds": [
        "1s25",
        "1s26"
      ],
      "startOnCreate": true,
      "system": false,
      "templates": null,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "b0c1e88b-055c-47c5-a1e5-b8bd0962bb15"
    },
    {
      "id": "1st17",
      "type": "stack",
      "links": {
        "self": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17",
        "account": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/account",
        "hosts": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/hosts",
        "instances": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/instances",
        "scheduledUpgrades": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/scheduledupgrades",
        "secrets": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/secrets",
        "services": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/services",
        "volumeTemplates": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/volumetemplates",
        "volumes": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/volumes",
        "composeConfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/composeconfig"
      },
      "actions": {
        "deactivateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/?action=deactivateservices",
        "activateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/?action=activateservices",
        "upgrade": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/?action=upgrade",
        "addoutputs": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/?action=addoutputs",
        "update": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/?action=update",
        "exportconfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/?action=exportconfig",
        "remove": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st17/?action=remove"
      },
      "baseType": "stack",
      "name": "elasticsearch-2",
      "state": "active",
      "accountId": "1a17",
      "answers": null,
      "binding": null,
      "created": "2022-07-21T10:23:00Z",
      "createdTS": 1658398980000,
      "description": null,
      "dockerCompose": "elasticsearch-masters:\n  image: rancher/elasticsearch-conf:v0.5.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-master,elasticsearch-datavolume-masters\n  volumes_from:\n    - elasticsearch-datavolume-masters\nelasticsearch-datavolume-masters:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n    - /usr/share/elasticsearch/config\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: elasticsearch:2.4.3-alpine\nelasticsearch-base-master:\n  labels:\n    elasticsearch.master.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:2.4.3-alpine\n  net: \"container:elasticsearch-masters\"\n  volumes_from:\n    - elasticsearch-datavolume-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nelasticsearch-datanodes:\n  image: rancher/elasticsearch-conf:v0.5.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-datanode,elasticsearch-datavolume-datanode\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  links:\n    - elasticsearch-masters:es-masters\n  volumes_from:\n    - elasticsearch-datavolume-datanode\nelasticsearch-datavolume-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n    - /usr/share/elasticsearch/config\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: elasticsearch:2.4.3-alpine\nelasticsearch-base-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:2.4.3-alpine\n  links:\n    - elasticsearch-masters:es-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n  volumes_from:\n    - elasticsearch-datavolume-datanode\n  net: \"container:elasticsearch-datanodes\"\n\n\nelasticsearch-clients:\n  image: rancher/elasticsearch-conf:v0.5.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-clients,elasticsearch-datavolume-clients\n  links:\n    - elasticsearch-masters:es-masters\n  volumes_from:\n    - elasticsearch-datavolume-clients\nelasticsearch-datavolume-clients:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n    - /usr/share/elasticsearch/config\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: elasticsearch:2.4.3-alpine\nelasticsearch-base-clients:\n  labels:\n    elasticsearch.client.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:2.4.3-alpine\n  volumes_from:\n    - elasticsearch-datavolume-clients\n  net: \"container:elasticsearch-clients\"\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nkopf:\n  image: rancher/kopf:v0.4.0\n  ports:\n    - \"${kopf_port}:80\"\n  environment:\n    KOPF_SERVER_NAME: 'es.dev'\n    KOPF_ES_SERVERS: 'es-clients:9200'\n  labels:\n    io.rancher.container.hostname_override: container_name\n  links:\n    - elasticsearch-clients:es-clients\n",
      "environment": {
        "cluster_name": "es",
        "kopf_port": "8092"
      },
      "externalId": "catalog://community:elasticsearch-2:1",
      "group": null,
      "healthState": "healthy",
      "kind": "stack",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": ".catalog:\n  name: \"Elasticsearch\"\n  version: \"2.4.3-rancher1\"\n  description: \"Elasticsearch. You know, for search\"\n  questions:\n    - variable: cluster_name\n      description: \"Unique name to assign to your Elasticsearch cluster.\"\n      label: \"Cluster Name\"\n      type: \"string\"\n      required: true\n      default: \"es\"\n    - variable: \"kopf_port\"\n      label: \"Public Port\"\n      description: \"Unique public port for kopf\"\n      type: \"int\"\n      default: 80\n      required: true\nelasticsearch-masters:\n  metadata:\n    elasticsearch:\n      yml:\n        cluster.name: \"${cluster_name}\"\n        node.name: \"$${HOSTNAME}\"\n        node.data: \"false\"\n        node.master: \"true\"\n        network.host: \"_site_\"\nelasticsearch-datanodes:\n  metadata:\n    elasticsearch:\n      yml:\n        cluster.name: \"${cluster_name}\"\n        node.name: \"$${HOSTNAME}\"\n        node.data: \"true\"\n        node.master: \"false\"\n        http.enabled: \"false\"\n        network.host: \"_site_\"\nelasticsearch-clients:\n  metadata:\n    elasticsearch:\n      yml:\n       cluster.name: \"${cluster_name}\"\n       node.name: \"$${HOSTNAME}\"\n       node.data: \"false\"\n       node.master: \"false\"\n       network.host: \"_site_\"\n",
      "removed": null,
      "serviceIds": [
        "1s27",
        "1s28",
        "1s29",
        "1s30"
      ],
      "startOnCreate": true,
      "system": false,
      "templates": null,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "9bf587aa-e559-4a6e-96a6-587b9a8331d2"
    },
    {
      "id": "1st18",
      "type": "stack",
      "links": {
        "self": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18",
        "account": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/account",
        "hosts": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/hosts",
        "instances": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/instances",
        "scheduledUpgrades": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/scheduledupgrades",
        "secrets": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/secrets",
        "services": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/services",
        "volumeTemplates": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/volumetemplates",
        "volumes": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/volumes",
        "composeConfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/composeconfig"
      },
      "actions": {
        "deactivateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/?action=deactivateservices",
        "activateservices": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/?action=activateservices",
        "upgrade": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/?action=upgrade",
        "addoutputs": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/?action=addoutputs",
        "update": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/?action=update",
        "exportconfig": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/?action=exportconfig",
        "remove": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks/1st18/?action=remove"
      },
      "baseType": "stack",
      "name": "kibana",
      "state": "active",
      "accountId": "1a17",
      "answers": null,
      "binding": null,
      "created": "2022-07-21T10:25:13Z",
      "createdTS": 1658399113000,
      "description": null,
      "dockerCompose": "kibana-vip:\n  ports:\n  - \"${public_port}:80\"\n  restart: always\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - nginx-proxy:kibana6\n  stdin_open: true\nnginx-proxy-conf:\n  image: rancher/nginx-conf:v0.2.0\n  command: \"-backend=rancher --prefix=/2015-07-25\"\n  labels:\n    io.rancher.container.hostname_override: container_name\nnginx-proxy:\n  image: rancher/nginx:v1.9.4-3\n  volumes_from:\n    - nginx-proxy-conf\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: nginx-proxy-conf,kibana6\n  external_links:\n    - ${elasticsearch_source}:elasticsearch\nkibana6:\n  restart: always\n  tty: true\n  image: docker.elastic.co/kibana/kibana:6.2.3\n  net: \"container:nginx-proxy\"\n  stdin_open: true\n  environment:\n    ELASTICSEARCH_URL: \"http://elasticsearch:9200\"\n  labels:\n    io.rancher.container.hostname_override: container_name\n",
      "environment": {
        "elasticsearch_source": "elasticsearch-2/elasticsearch-masters",
        "public_port": "8090"
      },
      "externalId": "catalog://community:kibana:4",
      "group": null,
      "healthState": "healthy",
      "kind": "stack",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": ".catalog:\n  name: \"Kibana\"\n  version: \"6.2.3-rancher1\"\n  description: \"Kibana: Explore & Visualize Your Data\"\n  questions:\n    - variable: \"elasticsearch_source\"\n      description: \"Link to elasticsearch service or stack/service\"\n      label: \"Elasticsearch source\"\n      type: \"service\"\n      required: true\n      default: \"es/elasticsearch-clients\"\n    - variable: \"public_port\"\n      label: \"Public Port\"\n      description: \"Unique public port for Kibana\"\n      type: \"int\"\n      default: 80\n      required: true\n\nnginx-proxy:\n  metadata:\n    nginx:\n      conf:\n        servername: \"kibana\"\n        upstream_port: 5601\n",
      "removed": null,
      "serviceIds": [
        "1s31",
        "1s32"
      ],
      "startOnCreate": true,
      "system": false,
      "templates": null,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "cc136827-3dc8-4f85-9bd6-2788e12de8e8"
    }
  ],
  "sortLinks": {
    "accountId": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=accountId",
    "created": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=created",
    "description": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=description",
    "externalId": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=externalId",
    "group": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=group",
    "healthState": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=healthState",
    "id": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=id",
    "kind": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=kind",
    "name": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=name",
    "removeTime": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=removeTime",
    "removed": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=removed",
    "state": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=state",
    "system": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=system",
    "uuid": "http://192.168.56.30:8080/v2-beta/projects/1a17/stacks?sort=uuid"
  },
  "pagination": {
    "first": null,
    "previous": null,
    "next": null,
    "limit": 100,
    "total": null,
    "partial": false
  },
  "sort": null,
  "filters": {
    "accountId": null,
    "created": null,
    "description": null,
    "externalId": null,
    "group": null,
    "healthState": null,
    "id": null,
    "kind": null,
    "name": null,
    "removeTime": null,
    "removed": null,
    "state": null,
    "system": null,
    "uuid": null
  },
  "createDefaults": {}
}